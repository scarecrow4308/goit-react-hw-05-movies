{"version":3,"file":"static/js/251.9b87a2b2.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/Loader/Loader.jsx","components/MovieCast/CastItem/CastItem.styled.js","components/MovieCast/CastItem/CastItem.jsx","components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport class MovieClass {\r\n  #API_KEY = \"31f7347fdd134b657fbdaae56841ddf8\";\r\n  #BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\n  async fetchSearchMovies(query) {\r\n    try {\r\n      const { data } = await axios.get(`${this.#BASE_URL}/search/movie`, {\r\n        params: {\r\n          query,\r\n          api_key: this.#API_KEY,\r\n        },\r\n      });\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"cathced\");\r\n    }\r\n  }\r\n\r\n  async fetchSearchMoviesById(id) {\r\n    try {\r\n      const { data } = await axios.get(`${this.#BASE_URL}/movie/${id}`, {\r\n        params: {\r\n          api_key: this.#API_KEY,\r\n        },\r\n      });\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"cathced\");\r\n    }\r\n  }\r\n\r\n  async fetchMovieCast(id) {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${this.#BASE_URL}/movie/${id}/credits`,\r\n        {\r\n          params: {\r\n            api_key: this.#API_KEY,\r\n          },\r\n        }\r\n      );\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"cathced\");\r\n    }\r\n  }\r\n\r\n  async fetchMovieReviews(id) {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${this.#BASE_URL}/movie/${id}/reviews`,\r\n        {\r\n          params: {\r\n            api_key: this.#API_KEY,\r\n          },\r\n        }\r\n      );\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"cathced\");\r\n    }\r\n  }\r\n\r\n  async fetchTrendingMovies() {\r\n    try {\r\n      const { data } = await axios.get(`${this.#BASE_URL}/trending/all/day`, {\r\n        params: {\r\n          api_key: this.#API_KEY,\r\n        },\r\n      });\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log(\"cathced\");\r\n    }\r\n  }\r\n}\r\n","import { ColorRing } from  'react-loader-spinner'\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <ColorRing\r\n  visible={true}\r\n  height=\"80\"\r\n  width=\"80\"\r\n  ariaLabel=\"blocks-loading\"\r\n  wrapperStyle={{}}\r\n  wrapperClass=\"blocks-wrapper\"\r\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n/>\r\n    )\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 90px;\r\n  height: auto;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 1px solid black;\r\n  border-radius: 4px;\r\n  width: 350px;\r\n  padding: 10px;\r\n`;\r\n","import { Image, Wrapper } from \"./CastItem.styled\";\r\n\r\nexport const CastItem = ({ actor }) => {\r\n    const { profile_path, name, character } = actor;\r\n    return (\r\n        <Wrapper>\r\n            <Image src={`https://image.tmdb.org/t/p/original${profile_path}`} alt={name} />\r\n            <h2>{name}</h2>\r\n            <p>Character: {character}</p>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const CastList = styled.ul`\r\n  display: flex;\r\n  list-style-type: none;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n`;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { MovieClass } from \"../../api/moviesAPI\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { CastItem } from \"./CastItem/CastItem\";\r\nimport { CastList } from \"./MovieCast.styled\";\r\n\r\nconst MovieCast = ({ movie }) => {\r\n    const movieFetch = new MovieClass();\r\n    const [cast, setCast] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchCast();\r\n    }, [])\r\n    const fetchCast = async() => {\r\n        const data = await movieFetch.fetchMovieCast(movie.id);\r\n        setCast(data.cast.slice(0,12));\r\n    }\r\n\r\n    if (!cast) return;\r\n    return (\r\n        <Suspense fallback={<Loader/>}>\r\n            <div>\r\n                <CastList>{cast.map(actor => <li key={actor.id}><CastItem actor={actor} /></li>)}</CastList>\r\n            </div>\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default MovieCast;"],"names":["MovieClass","query","axios","this","params","api_key","data","console","log","id","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Image","styled","Wrapper","CastItem","actor","profile_path","name","character","src","alt","CastList","movie","movieFetch","useState","cast","setCast","useEffect","fetchCast","fetchMovieCast","slice","Suspense","fallback","map"],"sourceRoot":""}